 @GetMapping("/token/refresh")
    public void refreshToken(HttpServletRequest request, HttpServletResponse response) throws IOException {
        String authorizationHeader = request.getHeader(AUTHORIZATION);
          CustomRefreshFilter.refreshFilter(request.getHeader(AUTHORIZATION));
        if (authorizationHeader != null && authorizationHeader.startsWith("Bearer")) {
            try {
                String refresh_token = authorizationHeader.substring("Bearer".length());
                Algorithm algorthm = Algorithm.HMAC256("secret".getBytes());
                JWTVerifier verifier = JWT.require(algorthm).build();
                DecodedJWT decodeJWT = verifier.verify(refresh_token);
                String username=decodeJWT.getSubject();
                User user= userService.getUser(username);
                String access_token= JWT.create()
                        .withSubject(user.getUsername())
                        .withExpiresAt(new Date(System.currentTimeMillis()+10*60*1000)) //
                        .withIssuer(request.getRequestURL().toString())
                        .withClaim("roles",user.getRoles().stream().map(Role::getName).collect(Collectors.toList()))
                        .sign(algorthm);
                Map<String,String> error=new HashMap<>();
                Map<String,String> tokens=new HashMap<>();
                tokens.put("access_token",access_token);
                tokens.put("refresh_token",refresh_token);
                response.setContentType(APPLICATION_JSON_VALUE);
                new ObjectMapper().writeValue(response.getOutputStream(),tokens);
            } catch (Exception exception) {
                response.setHeader("error",exception.getMessage());
                response.setStatus(FORBIDDEN.value());
                // response.sendError(FORBIDDEN.value());
                Map<String,String> error=new HashMap<>();
                error.put("messaggio_errore",exception.getMessage());
                response.setContentType(APPLICATION_JSON_VALUE);
                new ObjectMapper().writeValue(response.getOutputStream(),error);
            }
        }else{
            throw new RuntimeException("errore refresh Token");
        }
    }